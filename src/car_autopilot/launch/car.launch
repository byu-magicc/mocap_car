<launch>
  <arg name="vehicle_name" default="car"/>
  <group ns="$(arg vehicle_name)">
    <rosparam command="load" file="$(find car_autopilot)/param/ekf.yaml"/>
    <node name="ekf_node" pkg="car_autopilot" type="ekf_node" output="screen">
      <remap from="ekf_state" to="state"/>
    </node>
    <node name="mocap_transformer" pkg="car_autopilot" type="mocap_to_state.py" args="$(arg vehicle_name)" />
		<node name="controller" pkg="car_autopilot" type="controller.py" >
			<remap from="state" to="mocap"/>
		</node>
    <node name="path_follower" pkg="car_autopilot" type="path_follower">
      <param name="K_PATH" value="2.5"/>
      <param name="CHI_INFTY" value="1.5"/>
    </node>
    <!--<node name="controller_command_publisher" pkg="rostopic" type="rostopic"
        args="pub -r 10 controller_commands car_autopilot/Controller_Commands '1.0' -->

    <!--<node name="current_path_publisher" pkg="rostopic" type="rostopic"
        args="pub current_path -r 1 car_autopilot/Current_Path '1' '1.0'  '[1.0, 0.0]'  '[0.0, 1.0]'  '[0.0, 0.0]'  '100.0' '1'"/>-->
    <node name="path_manager" pkg="car_autopilot" type="path_manager" output="screen">
      <param name="R_min" value="0.7"/>
    </node>
    <node name="waypoint_publisher" pkg="car_autopilot" type="path_planner">
      <rosparam command="load" file="$(find car_autopilot)/param/waypoint_list.yaml" />
    </node>

    <!--KB Driver-->
    <node name="teensy" pkg="kb_utils" type="kb_driver.py" args="/dev/ttyACM0"/>

    <!-- <node name="record" pkg="robag" type="record" args="-O $(arg name)
    /encoder /sonar /ins /command /camera/color/image_raw/compressed /camera/depth/image_rect_raw/compressed" /> -->


  </group>
</launch>
